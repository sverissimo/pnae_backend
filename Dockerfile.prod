FROM node:22-slim AS deps
WORKDIR /home/node/app

COPY package*.json ./
RUN npm i -g npm@11.6.0 \
    && npm ci


FROM node:22-slim AS builder
WORKDIR /home/node/app

COPY --from=deps /usr/local/bin/npm /usr/local/bin/npm
COPY --from=deps /usr/local/bin/npx /usr/local/bin/npx
COPY --from=deps /home/node/app/node_modules ./node_modules

COPY . .

RUN npm i -g npm@11.6.0
RUN npm run build \
    && npm prune --production


FROM node:22-slim AS production
WORKDIR /home/node/app

ENV DOCKERIZE_VERSION=v0.7.0
RUN apt-get update -y && \
    apt-get install -y procps && \
    apt-get install -y openssl wget && \
    wget -O - https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz | tar xzf - -C /usr/local/bin && \
    apt-get autoremove -yqq --purge wget && \
    rm -rf /var/lib/apt/lists/*

COPY --from=builder /home/node/app/lib/wkhtmltox_0.12.6.1-3.bookworm_amd64.deb /tmp/
RUN apt-get update && \
    apt-get install -y /tmp/wkhtmltox_0.12.6.1-3.bookworm_amd64.deb && \
    rm -rf /var/lib/apt/lists/* /tmp/wkhtmltox_0.12.6.1-3.bookworm_amd64.deb

RUN usermod -u 1001 node && groupmod -g 1001 node

COPY --from=deps /usr/local/bin/npm /usr/local/bin/npm
COPY --from=deps /usr/local/bin/npx /usr/local/bin/npx

COPY --from=builder /home/node/app/dist ./dist
COPY --from=builder /home/node/app/certificates ./certificates
COPY --from=builder /home/node/app/production.env ./.env
COPY --from=builder /home/node/app/prisma ./prisma
COPY --from=builder /home/node/app/assets ./assets

COPY --from=builder /home/node/app/node_modules ./node_modules
COPY package.json ./
# RUN npm ci --omit=dev

RUN mkdir -p /home/node/.npm /home/node/logs /home/node/zipFiles && \
    chown -R node:node /home/node/
ENV NPM_CONFIG_CACHE=/home/node/.npm

USER node
RUN npx prisma generate
# CMD npm run start:prod
