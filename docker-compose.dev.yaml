services:
  pnae_backend_dev:
    image: pnae_backend_dev
    container_name: pnae_backend_dev
    build:
      context: .
      dockerfile: Dockerfile.dev
    env_file:
      - development.env
    entrypoint: "dockerize -wait tcp://postgres_pnae_dev:5432 -timeout 20s /usr/local/bin/docker-entrypoint.sh"
    command: "npm run start:dev"
    volumes:
      - ./:/home/node/app
      - /home/pnae/pnae_app/data_dev:/home/node/data_dev
      - /home/pnae/pnae_app/logs/dev:/home/node/logs
      - /home/pnae/pnae_app/zipFiles/dev:/home/node/zipFiles
    deploy:
       replicas: 1
       resources:
        limits:
          cpus: '3'
          memory: 4096M
    restart: always
    networks:
      - pnae_dev_default
  #   depends_on:
  #     - postgres_pnae_dev

  # postgres_pnae_dev:
  #   container_name: postgres_pnae_dev
  #   image: postgres:16
  #   env_file:
  #     - development.env
  #   ports:
  #     - '5433:5432'
  #   volumes:
  #     - ${DB_FOLDER}:/var/lib/postgresql/data
  #   environment:
  #     POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
  #     POSTGRES_USER: ${POSTGRES_USER}
  #     POSTGRES_DB: ${POSTGRES_DB}
  #   networks:
  #     - pnae_dev_default

  redis:
    image: redis:alpine
    container_name: redis_dev
    ports:
      - "6379:6379"
    networks:
      - pnae_dev_default
    restart: always


volumes:
  pg_data:
    external: true
networks:
  pnae_dev_default:
    external: true
